// OGP -- ARDUINO SIDE V2.0
// in this version, all of the timing is left up to the rpi
// for use with any serial device over usb
// this config handles:  2 SERVOS, and 1 MOTOR

#include <Servo.h> 
#include <AFMotor.h>

char val = 'n';         // variable to receive data from the serial port 


Servo myservo;         // create servo objects
Servo myservo2; 
AF_DCMotor motor(2);     //create dc motor object
              
void setup() 
{ 
  myservo.attach(9);         // attaches the servo on pin 9 to the servo object 
  myservo2.attach(10);       
  
  motor.setSpeed(0);         // just to make sure the motor is stopped
  motor.run(RELEASE);
  
  
  Serial.begin(9600);    // start serial communication at 9600bps 
}

void loop() { 
  
  if( Serial.available() )       // if data is available to read 
  { 
    val = Serial.read();         // read it and store it in 'val'   
  }
  
  
  switch( val )        //switch handles incoming signal
{
  
        case 'f':                      //   focus  1
        motor.setSpeed(255);
        motor.run(FORWARD);
        Serial.println("focus 1");
        break;       
        
        case 'c':                  // focus stop
        motor.run(RELEASE);
        Serial.println("focus stop");
        break;               
        
        case 't':                  // focus 2
        motor.setSpeed(255);
        motor.run(BACKWARD);
        break;
       

        case '1':                         //  directionals  X
        myservo.write(95);    
        Serial.println("1 - CounterClockwise Fast");
        break; 
        
        case '2':                   
        myservo.write(93);    
        Serial.println("2 - CounterClockwise");
        break;
        
        case '3':               // stopped
        myservo.write(90);
        Serial.println("3 - Stop x");
        break;
        
        case '4':
        myservo.write(87);
        Serial.println("8 - Clockwise");
        break;
        
        case '5':
        myservo.write(85);
        Serial.println("9 - Clockwise Fast");
        break;        
        
        case '6':                           // Y
        myservo2.write(95); 
        Serial.println("7 - down fast");
        break;     
        
        case '7':                         
        myservo2.write(93); 
        Serial.println("7 - down");
        break;       
        
        case '8':
        myservo2.write(90);
        break;
        
        case '9':
        myservo2.write(85);
        Serial.println("9 - up");
        break;

        case '0':
        myservo2.write(87);
        Serial.println("0 - up fast");
        break;
        
        case 'n':
        myservo2.write(90);
        myservo.write(90);
        Serial.println("all stop");
        break;


        default :              // catches exceptions
        myservo.write(90);
        myservo2.write(90);
        Serial.println("default");
     
     
}
           
} 
// (c) Copyright 2014   C. Robert Barnett III

